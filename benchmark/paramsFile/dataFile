#------------------------------------------------
#      Data file for  test
#-------------------------------------------------

[mesh]
    verbose                      = false
    mesh_dir                     = ./meshes/
    bg_mesh_file                 = fluid.mesh  
    fg1_mesh_file                = membrane.mesh
    fg2_mesh_file                = magnet.mesh
    mesh_type                    = .mesh

[physics]
    [./fluid]
        rhoF            = 1     # g/cm^3 #
        mu              = 0.035    # g/cm*s #
    [../]
    [./solid]
        rhoS            = 1.125     # g/cm^3 #
        youngModulus    = 1.686e7   # g/cm*s^2 #
        poissonRatio    = 0.49
    [../]
    [./solid2]
        rhoS2            = 7.85     # g/cm^3 #
        youngModulus2    = 2.05e12   # g/cm*s^2 #
        poissonRatio2    = 0.28                     
    [../]            
[../]

[penalty]
    gamma_v1        = 5.e-2     # CIP: convection
    gamma_v2        = 5.e-1     # CIP: divergence
    gamma_p         = 5.e-2     # CIP: pressure

[time_discretization]
    initialtime     = 0.0
    endtime         = 0.010
    timestep        = 0.0002

    [./fluid]
        method      = BDF
        BDF_order   = 1
        theta       = 0.25
        gamma       = 0.5

    [../]
    [./solid]
        method      = BDF
        BDF_order   = 1
        theta       = 0.25
        gamma       = 0.5

[prec]
    paramListFile                = solverFile.xml
    prectype                     = UnfitMonoDN # Ifpack , ML , UnfitMonoDN
    displayList                  = false

    [./UnfitMonoDN]

        DNFactType  = SolidFluid  # None , Full , SolidFluid , FluidSolid , SolidFluidSIMPLE
        damping     = 1.

        [./subprecs]

            fluid_prec  = Ifpack # Ifpack , ML , UnfitSIMPLE
            vel_prec    = Ifpack # Ifpack , ML
            pres_prec   = Ifpack # Ifpack , ML
            solid_prec  = Ifpack # Ifpack , ML
            fluid_prec_data_section = prec/UnfitMonoDN
            vel_prec_data_section   = prec/UnfitMonoDN
            pres_prec_data_section  = prec/UnfitMonoDN
            solid_prec_data_section = prec/UnfitMonoDN

        [../]
        [./ifpack]
            prectype                 = Amesos # Amesos (complete LU) , ILU , ILUT
            overlap                  = 1

            [./schwarz]
                combine_mode         = 0 # 0: Add , 1: Zero , 2: Insert ,
                                         # 3: Average , 4: AbsMax
                compute_condest      = true
                reordering_type      = none # none , metis , rcm
                filter_singletons    = true

            [../]
            [./amesos]               # for prectype = Amesos
                solvertype           = Amesos_KLU # Amesos_KLU , Amesos_Umfpack

            [../]
            [./fact]                 # for prectype = ILU / ILUT
                level-of-fill        = 4
                ilut_level-of-fill   = 1
                absolute_threshold   = 0
                relative_threshold   = 1
                drop_tolerance       = 1.e-5
                relax_value          = 0

            [../]
        [../]
        [./ML]
        analyze_smoother            = false
        default_parameter_list      = DD-ML # SA, DD, DD-ML, maxwell, NSSA, DD-ML-LU, DD-LU

            [./smoother]
            # smoother type
            # Aztec, IFPACK, Jacobi, ML symmetric Gauss-Seidel, symmetric Gauss-Seidel,
            # ML Gauss-Seidel, Gauss-Seidel, Chebyshev, MLS, Hiptmair, Amesos-KLU,
            # Amesos-Superlu, Amesos-UMFPACK, Amesos-Superludist, Amesos-MUMPS,
            # user-defined, SuperLU, IFPACK-Chebyshev, self, do-nothing,
            # IC, ICT, ILU, ILUT
            type                    = IFPACK
            pre_or_post             = pre
            sweeps                  = 3
            damping_factor          = 1

            [../]
            [./coarse]
            type                    = Amesos-UMFPACK # Amesos-KLU , Amesos-UMFPACK
            sweeps                  = 1
            pre_or_post             = both
            max_size                = 200

            [../]
            [./repartition]
            enable                  = 1
            partitioner             = ParMETIS
            max_min_ration          = 1.3
            min_per_proc            = 500

            [../]
            [./energy_minimization]
            enable          = true
            type            = 3

            [../]
        [../]
        [./UnfitSIMPLE]
            damping     = 0.5

            [./subprecs]

                vel_prec    = Ifpack # Ifpack , ML
                pres_prec   = Ifpack # Ifpack , ML
                vel_prec_data_section   = prec/UnfitMonoDN
                pres_prec_data_section  = prec/UnfitMonoDN

            [../]
        [../]
    [../]
[../]
